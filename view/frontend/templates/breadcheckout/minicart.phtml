<?php /** @var Bread\BreadCheckout\Block\Checkout\Overview $block */ ?>
<?= /* @noEscape */ $block->getBeforeHtml(); ?>
<div id="bread-btn-cntnr-minicart">
    <div id="bread-checkout-btn-minicart" title="Bread Checkout" class="button" <?= /* @noEscape */ $block->getIsDefaultSize(); ?>>
    </div>
    <div class="button-prevent" id="button-prevent">
        <span class="buy_error_tip override_tip" data-content="<?= /* @noEscape */ $block->productTypeErrorMessage() ?>">&nbsp;</span>
    </div>
</div>

<script type="text/javascript">
    <?php if ($block->getApiVersion() === 'bread_2') : ?>
    require(['jquery'], function($) {
        let wasSetup = false;
        document.configureButton = function (items) {
            if (typeof window.BreadPayments !== 'undefined' || typeof window.RBCPayPlan !== 'undefined') {
                var currentCurrencyCode = "<?= /* @noEscape */ $block->getCurrentCurrencyCode(); ?>";
                var configClient = "<?= /* @noEscape */ $block->getConfigClient(); ?>";
                var breadSdk = null;
                if (configClient === 'RBC') {
                    breadSdk = window.RBCPayPlan;
                } else {
                    breadSdk = window.BreadPayments;
                }
                var total = 0;
                var itemsObject = [];
                for(var i = 0; i < items.length; i++) {
                    total += items[i]['price'] * items[i]['quantity'];
                    var item = {
                                name: items[i].name,
                                quantity: items[i].quantity,
                                shippingCost: {
                                    value: 0,
                                    currency: currentCurrencyCode
                                },
                                shippingDescription: '',
                                unitTax: {
                                    value: 0,
                                    currency: currentCurrencyCode
                                },
                                unitPrice: {
                                    currency: currentCurrencyCode,
                                    value: items[i].price
                                },
                                itemUrl: items[i].detailUrl
                            };

                            itemsObject.push(item);
                }
                var placementObject = {
                    allowCheckout: false,
                    domID: 'bread-checkout-btn-minicart',
                    order: {
                        currency: currentCurrencyCode,
                        items: itemsObject,
                        subTotal: {
                            value: total,
                            currency: currentCurrencyCode
                        },
                        totalPrice: {
                            value: total,
                            currency: currentCurrencyCode
                        },
                        totalDiscounts: {
                            value: 0,
                            currency: currentCurrencyCode
                        },
                        totalShipping: {
                            value: 0,
                            currency: currentCurrencyCode
                        },
                        totalTax: {
                            value: 0,
                            currency: currentCurrencyCode
                        }
                    }
                };
                breadSdk.placements.push(placementObject);
                breadSdk.init();
            }
            
        };
        
        $(window).on('load', function() {
            var minicartItems       = <?= /* @noEscape */ $block->getProductDataJson(); ?>;
            document.configureButton(minicartItems);
        });
    });    
    //# sourceURL=bread-minicart.js
    <?php endif; ?>
</script>
