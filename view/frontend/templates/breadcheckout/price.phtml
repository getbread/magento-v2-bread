<?php /** @var $block Bread\BreadCheckout\Block\Product\View */ ?>
<?= /* @noEscape */ $block->getBeforeHtml(); ?>
<?php if ($block->getApiVersion() === 'bread_2') : ?>
<div id="bread-btn-render"></div>
<?php else: ?>
<div class="splitpay-clickable-price" style="padding-bottom: 5px"></div>
<?php endif; ?>

<?php /** TODO: rename these javascript functions when doing refactor of template files */ ?>
<script type="text/javascript">
    <?php if ($block->getApiVersion() !== 'bread_2') : ?>  
    require(['jquery', 'splitPay'], function($, splitPay) {

        document.splitPayConfigureButton = function (items) {
            var buttonCss           = '<?= /* @noEscape */ $block->getButtonDesign(); ?>';
            var financingInfo   = <?= /* @noEscape */ $block->getFinancingJson(); ?>;
            var breadConfig = {
                <?php if (!$block->isHealthcare()) : ?>
                items: items,
                <?php else : ?>
                customTotal: items[0]['price'],
                <?php endif; ?>
                discounts: <?= /* @noEscape */ $block->getDiscountDataJson(); ?>,
                allowCheckout: false,
                done: function() {},

                /**
                 * Add to cart call back used when allow checkout from product page = false
                 *
                 * @param callback
                 */
                addToCart:  function(callback) {
                    document.getElementById('product_addtocart_form').submit();
                }
            };

            if (buttonCss !== null && buttonCss !== '' && buttonCss != false) {
                breadConfig.customCSS = buttonCss;
            }

            if(financingInfo.enabled && financingInfo.mode.cart){
                var cartSizeFinancingId = financingInfo.id;
                var cartSizeThreshold = financingInfo.threshold;
                var itemsPriceSum = items.reduce(function(sum, item) { return sum + item.price * item.quantity; }, 0) / 100;
                breadConfig.financingProgramId = (itemsPriceSum >= cartSizeThreshold) ? cartSizeFinancingId : 'null';
            } else if (financingInfo.enabled && financingInfo.mode.sku){
                var productSku = "<?= /* @noEscape */ $block->getProduct()->getSku(); ?>";
                if(financingInfo.sku_limit.includes(productSku) === true){
                    breadConfig.financingProgramId = financingInfo.id;
                }
            }

            if (!document.splitPayHasCheckedConfigData) {

                var configDataUrl = '<?= /* @noEscape */ $block->getConfigDataUrl(); ?>';
                $.ajax({
                    url: configDataUrl,
                    type: 'post',
                    context: this
                }).done(function(data) {
                    document.splitPayHasCheckedConfigData = true;

                    if (data.shippingContact !== false) {
                        breadConfig.shippingContact = data.shippingContact;
                    }

                    if (data.billingContact !== false) {
                        breadConfig.billingContact = data.billingContact;
                    }

                    if (typeof bread !== 'undefined') {
                        splitPay.setupSplitPay(breadConfig, '.splitpay-clickable-price', true);
                    }
                }).fail(function(error) {
                    document.logBreadIssue('error', {},
                        'Error code returned when calling ' + configDataUrl + ', with status: ' + error.statusText);
                });

            } else {
                if (typeof bread !== 'undefined') {
                    splitPay.setupSplitPay(breadConfig, '.splitpay-clickable-price', true);
                }
            }

        };

        <?php if ($block->getProduct() != null) : ?>

        /**
         * Reconfigure Bread checkout button with updated
         * price and sku values
         */
        document.splitPayResetPriceAndSku = function(configurable) {
            if (!configurable) {
                document.splitPayConfigureButton(document.splitPayDefaultItems);
            }
            else {
                var price = document.splitPayCalculatePrice();

                if(typeof document.customOptions !== "undefined"){
                    sku = document.splitPaySelectedSku + document.customOptions;
                } else {
                    sku = document.splitPaySelectedSku;
                }

                if (sku != document.splitPayPreviousSku || price != document.splitPayPreviousPrice) {
                    document.splitPayPreviousSku                    = sku;
                    document.splitPayPreviousPrice                  = price;
                    document.splitPayDefaultItems[0]["sku"]         = document.splitPayPreviousSku;
                    document.splitPayDefaultItems[0]["price"]       = document.splitPayPreviousPrice;
                    document.splitPayConfigureButton(document.splitPayDefaultItems);
                }
            }
        };

        /**
         * Calculate updated price based on attribute selections
         * and/or custom options
         *
         * @returns int
         */
        document.splitPayCalculatePrice = function() {
            var price = 0;
            var customPrice = 0;

            if (document.priceWithOptions) {
                customPrice = document.priceWithOptions;
            }

            var selectedProductPrices = spConfig && spConfig.optionPrices[document.splitPaySelectedSimpleProductId];

            if (selectedProductPrices) {
                price = parseInt(Math.round(selectedProductPrices.finalPrice.amount * 100));
            }

            return Math.max(price, customPrice);
        };
        <?php endif; ?>
        document.splitPayDefaultItems       = <?= /* @noEscape */ $block->getProductDataJson(); ?>;
        document.splitPayPreviousPrice      = document.splitPayDefaultItems[0]["price"];
        document.splitPayPreviousSku        = document.splitPayDefaultItems[0]["sku"];

        $(window).on('load', function() {
            <?php if ($block->getProduct() != null) : ?>
            document.splitPayProductId                      = '<?= /* @noEscape */ $block->getProduct()->getId(); ?>';
            document.splitPayBaseProductSku                 = '<?= /* @noEscape */ $block->getProduct()->getSku(); ?>';
            document.splitPaySelectedSku                    = '<?= /* @noEscape */ $block->getProduct()->getSku(); ?>';
            document.splitPaySelectedSimpleProductId        = '<?= /* @noEscape */ $block->getProduct()->getId(); ?>';
            document.splitPayResetPriceAndSku(false);
            <?php else : ?>
            document.splitPayConfigureButton(document.splitPayDefaultItems);
            <?php endif; ?>
        });
    });
    <?php endif; ?>
</script>
